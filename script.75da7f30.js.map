{"version":3,"sources":["script.js"],"names":["window","addEventListener","fetchFilmData","response","fetch","ok","Error","jsonData","json","error","console","getRandomImage","filmData","filmIndex","Math","floor","random","length","imageIndex","randomImageUrl","Images","filmName","Title","log","randomImageContainer","document","getElementById","innerHTML","randomImageBtn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEAA,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,kBAAiB;EAC7C;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,eAAeC,aAAaA,CAAA,EAAG;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;MAC3C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;MACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtC,OAAOD,QAAQ;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,IAAI;IACf;EACJ;;EAEA;EACA,eAAeE,cAAcA,CAAA,EAAG;IAC5B,MAAMC,QAAQ,GAAG,MAAMV,aAAa,CAAC,CAAC;IAEtC,IAAIU,QAAQ,EAAE;MACV;MACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC;MAC7D;MACA,MAAMC,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;;MAEhD;MACA,MAAMG,cAAc,GAAGP,QAAQ,CAACC,SAAS,CAAC,CAACO,MAAM,CAACF,UAAU,CAAC;;MAE7D;MACA,MAAMG,QAAQ,GAAGT,QAAQ,CAACC,SAAS,CAAC,CAACS,KAAK;MAC1CZ,OAAO,CAACa,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA,MAAMG,oBAAoB,GAAGC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC;MAC5EF,oBAAoB,CAACG,SAAS,GAAI,aAAYR,cAAe,uBAAsB;IACvF;EACJ;EACA;EACJ,MAAMS,cAAc,GAAGH,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;EAChEE,cAAc,CAAC3B,gBAAgB,CAAC,OAAO,EAAEU,cAAc,CAAC;AAExD,CAAC,CAAC","file":"script.75da7f30.js","sourceRoot":"..\\demo","sourcesContent":["// import blink from 'blink-detection';\r\n\r\nwindow.addEventListener('load', async function() {\r\n    // await blink.loadModel();\r\n\r\n    // // set up the camera feed needed for the detection\r\n    // const videoElement = document.querySelector('video');\r\n    \r\n    // const init = async () => {\r\n    //   // Using the default webcam\r\n    //   await gaze.setUpCamera(videoElement);\r\n    \r\n    //   // Or, using more camera input devices\r\n    //   const mediaDevices = await navigator.mediaDevices.enumerateDevices();\r\n    //   const camera = mediaDevices.find(\r\n    //     (device) =>\r\n    //       device.kind === 'videoinput' &&\r\n    //       device.label.includes(/* The label from the list of available devices*/)\r\n    //   );\r\n    \r\n    //   await gaze.setUpCamera(videoElement, camera.deviceId);\r\n    // };\r\n    \r\n    // //training\r\n    // const predict = async () => {\r\n    //     const blinkPrediction = await blink.getBlinkPrediction();\r\n    //     console.log('Blink: ', blinkPrediction); // will return an object indicating the booleans for different states\r\n    //     // expect blinkPrediction to be {\r\n    //     //  blink: boolean,\r\n    //     //  wink: boolean,\r\n    //     //  longBlink: boolean,\r\n    //     //  left: boolean,\r\n    //     //  right: boolean,\r\n    //     //  rate: number\r\n    //     // }\r\n    //     if (blinkPrediction.blink) {\r\n    //       console.log(blinkPrediction);\r\n    //     }\r\n    //     let raf = requestAnimationFrame(predict);\r\n    //   };\r\n    //   predict();\r\n    //   cancelAnimationFrame(raf);\r\n    \r\n    // Function to fetch the JSON data from the \"film.json\" file\r\n    async function fetchFilmData() {\r\n        try {\r\n            const response = await fetch('film.json'); // Replace with the correct path to your JSON file\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch JSON data');\r\n            }\r\n            const jsonData = await response.json();\r\n            return jsonData;\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    // Function to get a random image URL from the JSON data\r\n    async function getRandomImage() {\r\n        const filmData = await fetchFilmData();\r\n    \r\n        if (filmData) {\r\n            //random index within the number of films\r\n            const filmIndex = Math.floor(Math.random() * filmData.length);\r\n            // random index to choose which image is displayed withing the image urls\r\n            const imageIndex = Math.floor(Math.random() * 5);\r\n    \r\n            // Get the random image URL from the selected JSON object\r\n            const randomImageUrl = filmData[filmIndex].Images[imageIndex]; \r\n    \r\n            //Get name of the movie\r\n            const filmName = filmData[filmIndex].Title;\r\n            console.log(filmName);\r\n            // Display the selected image in the HTML\r\n            const randomImageContainer = document.getElementById('randomImageContainer');\r\n            randomImageContainer.innerHTML = `<img src=\"${randomImageUrl}\" alt=\"Random Image\">`;\r\n        }\r\n    } \r\n    // Add an event listener to the button\r\nconst randomImageBtn = document.getElementById('randomImageBtn');\r\nrandomImageBtn.addEventListener('click', getRandomImage);\r\n  \r\n})\r\n\r\n\r\n"]}